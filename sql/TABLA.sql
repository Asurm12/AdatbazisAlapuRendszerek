CREATE TABLE VASARLO 
(
  ID NUMBER NOT NULL 
, NEV VARCHAR2(20) NOT NULL 
, SZAMLACIM VARCHAR2(20) NOT NULL 
, SZALLITCIM VARCHAR2(20) NOT NULL 
, SZALLITCIM2 VARCHAR2(20) NOT NULL 
, TORZSE NUMBER(1) NOT NULL 
, OSSZESKOLTSEG NUMBER DEFAULT 0 NOT NULL 
, TETELSZAM NUMBER DEFAULT 0 NOT NULL 
, CONSTRAINT VASARLO_PK PRIMARY KEY 
  (
    ID 
  )
  ENABLE 
);
CREATE SEQUENCE VASARLO_SEQ1;

CREATE TRIGGER VASARLO_TRG 
BEFORE INSERT ON VASARLO 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.ID IS NULL THEN
      SELECT VASARLO_SEQ1.NEXTVAL INTO :NEW.ID FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
CREATE TABLE KONYV 
(
  ID NUMBER NOT NULL 
, CIM VARCHAR2(60) NOT NULL 
, OLDALSZAM NUMBER(4) NOT NULL 
, KIADIDO DATE NOT NULL 
, HANYADIKKIADAS VARCHAR2(20) NOT NULL 
, SZERZO VARCHAR2(60) NOT NULL 
, TARSSZERZO VARCHAR2(60) NOT NULL 
, KIADO VARCHAR2(60) NOT NULL 
, VASARLASSZAM NUMBER(10) NOT NULL 
, MERET VARCHAR2(20) NOT NULL 
, KOTES VARCHAR2(20) NOT NULL 
, AR NUMBER NOT NULL 
, MUFAJ VARCHAR2(20) NOT NULL 
, ALMUFAJ VARCHAR2(20) NOT NULL 
, EBOOK NUMBER(1) NOT NULL 
, CSAKEB NUMBER(1) NOT NULL 
, ISBN13 NUMBER(13) NOT NULL 
, CONSTRAINT KONYV_PK PRIMARY KEY 
  (
    ID 
  )
  ENABLE 
);
CREATE SEQUENCE KONYV_SEQ1;

CREATE TRIGGER KONYV_TRG 
BEFORE INSERT ON KONYV 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.ID IS NULL THEN
      SELECT KONYV_SEQ1.NEXTVAL INTO :NEW.ID FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
CREATE TABLE ALBUM 
(
  ID NUMBER NOT NULL 
, ELOADO VARCHAR2(20) NOT NULL 
, CIM VARCHAR2(20) NOT NULL 
, MUFAJ VARCHAR2(20) NOT NULL 
, AR NUMBER(5) NOT NULL 
, CONSTRAINT ALBUM_PK PRIMARY KEY 
  (
    ID 
  )
  ENABLE 
);

CREATE SEQUENCE ALBUM_SEQ1;

CREATE TRIGGER ALBUM_TRG 
BEFORE INSERT ON ALBUM 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.ID IS NULL THEN
      SELECT ALBUM_SEQ1.NEXTVAL INTO :NEW.ID FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
CREATE TABLE FILM 
(
  ID NUMBER NOT NULL 
, CIM VARCHAR2(40) NOT NULL 
, MUFAJ VARCHAR2(20) NOT NULL 
, BLUERAYE NUMBER(1) NOT NULL 
, RENDEZO VARCHAR2(20) NOT NULL 
, AR NUMBER(5) NOT NULL 
, CONSTRAINT FILM_PK PRIMARY KEY 
  (
    ID 
  )
  ENABLE 
);
CREATE SEQUENCE FILM_SEQ;

CREATE TRIGGER FILM_TRG 
BEFORE INSERT ON FILM 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.ID IS NULL THEN
      SELECT FILM_SEQ.NEXTVAL INTO :NEW.ID FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
CREATE TABLE ARUHAZ 
(
  ID NUMBER NOT NULL 
, CIM VARCHAR2(60) NOT NULL 
, DOLGOZOSZAM NUMBER(10) NOT NULL 
, NYITVATART VARCHAR2(40) NOT NULL 
, CONSTRAINT ARUHAZ_PK PRIMARY KEY 
  (
    ID 
  )
  ENABLE 
);
CREATE SEQUENCE ARUHAZ_SEQ1;

CREATE TRIGGER ARUHAZ_TRG 
BEFORE INSERT ON ARUHAZ 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.ID IS NULL THEN
      SELECT ARUHAZ_SEQ1.NEXTVAL INTO :NEW.ID FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
CREATE TABLE RENDELES 
(
  ID NUMBER NOT NULL 
, TERMEKID NUMBER NOT NULL 
, TERMEKTIPUS NUMBER NOT NULL 
, VASARLOID NUMBER NOT NULL 
, RENDELESID NUMBER NOT NULL 
, CONSTRAINT RENDELES_PK PRIMARY KEY 
  (
    ID 
  )
  ENABLE 
);

ALTER TABLE RENDELES
ADD CONSTRAINT RENDELES_FK1 FOREIGN KEY
(
  VASARLOID 
)
REFERENCES VASARLO
(
  ID 
)
ENABLE;
CREATE SEQUENCE RENDELES_SEQ1;
create SEQUENCE rendelesID_SEQ;
CREATE TRIGGER RENDELES_TRG 
BEFORE INSERT ON RENDELES 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.ID IS NULL THEN
      SELECT RENDELES_SEQ1.NEXTVAL INTO :NEW.ID FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
CREATE TABLE ALKALMAZOTT 
(
  ID NUMBER NOT NULL 
, NEV VARCHAR2(40) NOT NULL 
, SZULIDO DATE NOT NULL 
, FIZETES NUMBER(6) NOT NULL 
, BEOSZTAS VARCHAR2(20) NOT NULL 
, MUNKAVISZONY VARCHAR2(20) NOT NULL 
, CIM VARCHAR2(20) NOT NULL 
, ARUHAZID NUMBER NOT NULL 
, CONSTRAINT ALKALMAZOTT_PK PRIMARY KEY 
  (
    ID 
  )
  ENABLE 
);
CREATE SEQUENCE ALKALMAZOTT_SEQ1;

CREATE TRIGGER ALKALMAZOTT_TRG 
BEFORE INSERT ON ALKALMAZOTT 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.ID IS NULL THEN
      SELECT ALKALMAZOTT_SEQ1.NEXTVAL INTO :NEW.ID FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TABLE ALKALMAZOTT
ADD CONSTRAINT ALKALMAZOTT_FK1 FOREIGN KEY
(
  ARUHAZID 
)
REFERENCES ARUHAZ
(
  ID 
)
ENABLE;

CREATE TABLE KEDVEZMENY 
(
  ID NUMBER NOT NULL 
, KONYVID NUMBER NOT NULL 
, KEDVEZMENYSZAZALEK NUMBER(2) NOT NULL 
, CONSTRAINT KEDVEZMENY_PK PRIMARY KEY 
  (
    ID 
  )
  ENABLE 
);
CREATE SEQUENCE KEDVEZMENY_SEQ1;

CREATE TRIGGER KEDVEZMENY_TRG 
BEFORE INSERT ON KEDVEZMENY 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.ID IS NULL THEN
      SELECT KEDVEZMENY_SEQ1.NEXTVAL INTO :NEW.ID FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TABLE KEDVEZMENY
ADD CONSTRAINT KEDVEZMENY_FK1 FOREIGN KEY
(
  KONYVID 
)
REFERENCES KONYV
(
  ID 
)
ENABLE;
CREATE TABLE RAKTAR 
(
  ID NUMBER NOT NULL 
, TERMEKID NUMBER NOT NULL 
, TERMEKTIPUS VARCHAR2(20) NOT NULL 
, DARAB NUMBER NOT NULL 
, ARUHAZID NUMBER NOT NULL 
, CONSTRAINT RAKTAR_PK PRIMARY KEY 
  (
    ID 
  )
  ENABLE 
);

ALTER TABLE RAKTAR
ADD CONSTRAINT RAKTAR_FK1 FOREIGN KEY
(
  ARUHAZID 
)
REFERENCES ARUHAZ
(
  ID 
)
ENABLE;

CREATE SEQUENCE RAKTAR_SEQ2;

CREATE TRIGGER RAKTAR_TRG 
BEFORE INSERT ON RAKTAR 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.ID IS NULL THEN
      SELECT RAKTAR_SEQ2.NEXTVAL INTO :NEW.ID FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/